/*!apiview */
var apiview = angular.module("apiview", ["ngRoute", "ngAnimate", "angular-md5"]);
apiview.config(["$httpProvider", function (a) {
    a.defaults.headers.common["X-Requested-With"] = "XMLHttpRequest", a.defaults.headers.post["Content-Type"] = "application/x-www-form-urlencoded; charset=UTF-8"
}]), apiview.config(["$routeProvider", function (a) {
    a.when("/project/all", {
        templateUrl: "/tpl/project/list.html",
        page_title: "所有项目"
    }).when("/project/created", {
        templateUrl: "/tpl/project/list.html",
        page_title: "我创建的"
    }).when("/project/joined", {
        templateUrl: "/tpl/project/list.html",
        page_title: "我参与的"
    }).when("/project/stared", {
        templateUrl: "/tpl/project/list.html",
        page_title: "我收藏的"
    }).when("/project/create", {
        templateUrl: "/tpl/project/create.html",
        page_title: "新建项目"
    }).when("/account/password", {
        templateUrl: "/tpl/Account/password.html",
        page_title: "修改密码"
    }).when("/account/profile", {
        templateUrl: "/tpl/Account/profile.html",
        page_title: "个人资料"
    }).when("/account/gravater", {
        templateUrl: "/tpl/Account/gravater.html",
        page_title: "修改头像"
    }).when("/message/all", {
        templateUrl: "/tpl/Message/all.html",
        page_title: "所有消息",
        controller: "MessageController"
    }).when("/message/join", {
        templateUrl: "/tpl/Message/join.html",
        page_title: "加入申请",
        controller: "MessageController"
    }).when("/message/system", {
        templateUrl: "/tpl/Message/system.html",
        page_title: "系统通知",
        controller: "MessageController"
    }).when("/api/create", {
        templateUrl: "/tpl/api/create.html",
        page_title: "创建接口",
        controller: "ApiController"
    }).when("/api/list", {
        templateUrl: "/tpl/api/list.html",
        page_title: "接口列表",
        controller: "ApiController"
    }).when("/api/copy/:id", {
        templateUrl: "/tpl/api/create.html",
        page_title: "复制接口",
        controller: "ApiController"
    }).when("/api/edit/:id", {
        templateUrl: "/tpl/api/create.html",
        page_title: "编辑接口",
        controller: "ApiController"
    }).when("/api/view/:id", {
        templateUrl: "/tpl/api/view.html",
        page_title: "接口详情",
        controller: "ApiController"
    }).when("/group/create", {
        templateUrl: "/tpl/group/create.html",
        page_title: "创建分组",
        controller: "GroupController"
    }).when("/group/edit/:id", {
        templateUrl: "/tpl/group/create.html",
        page_title: "修改分组",
        controller: "GroupController"
    }).when("/group/list", {
        templateUrl: "/tpl/group/list.html",
        page_title: "分组列表",
        controller: "GroupController"
    }).when("/member/list", {
        templateUrl: "/tpl//member/list.html",
        page_title: "项目成员",
        controller: "MemberController"
    }).when("/project/dashbord", {
        templateUrl: "/tpl/project/dashbord.html",
        page_title: "项目概览",
        controller: "ProjectController"
    }).when("/setting/baseinfo", {
        templateUrl: "/tpl/project/baseinfo.html",
        page_title: "项目信息",
        controller: "ProjectController"
    }).when("/setting/logo", {
        templateUrl: "/tpl//Setting/logo.html",
        page_title: "修改项目logo"
    }).when("/setting/debug", {
        templateUrl: "/tpl//Setting/debug.html",
        page_title: "调试设置",
        controller: "ProjectController"
    }).when("/setting/advance", {
        templateUrl: "/tpl/project/advance.html",
        page_title: "高级设置",
        controller: "ProjectController"
    }).when("/setting/export", {
        templateUrl: "/tpl//Setting/export.html",
        page_title: "导出文档",
        controller: "ProjectController"
    }).when("/setting/code", {
        templateUrl: "/tpl//Setting/code.html",
        page_title: "生成代码",
        controller: "ProjectController"
    }).when("/info", {
        templateUrl: "/tpl/project/dashbord.html",
        page_title: "项目信息",
        controller: "ApiController"
    }).when("/api/:id", {
        templateUrl: "/tpl//api/view.html",
        page_title: "查看接口"
    }).when("/doc/dashbord", {
        templateUrl: "/tpl/doc/dashbord.html",
        page_title: "阅读文档",
        controller: "ProjectController"
    }).otherwise({redirectTo: "/", page_title: ""})
}]), apiview.controller("PublicController", ["$scope", "$http", "$sce", function (a, b, c) {
    a.dashbord = "0", a.user_info = {}, a.project_info = {}, a.form_data = {}, a.nav_first = "project", a.nav_second = "all", a.$on("$routeChangeStart", function (b, c, d) {
        if (c.$$route && (a.page_title = c.$$route.page_title, document.title = c.$$route.page_title + "-Apiview-api文档管理"), c.hasOwnProperty("$$route")) {
            var e = c.$$route.originalPath.split("/");
            3 === e.length ? (a.nav_first = e[1], a.nav_second = e[2]) : a.nav_first = e[1]
        }
    }), a.$on("$routeChangeSuccess", function (a, b, c) {
    }), a.dealResponse = function (a, b) {
        true == a.success ? (new PNotify({
            title: "操作成功！",
            text: a.message,
            type: "success"
        }), "function" == typeof b && b(a)) : new PNotify({title: "操作失败！", text: a.message, type: "error"})
    }, a.commonAjax = function (c, d, e) {
        "get" === c ? b.get(d, {}).success(function (b) {
            a.dealResponse(b, e)
        }) : b.post(d, $.param(a.form_data)).success(function (b) {
            a.dealResponse(b, e)
        })
    }, a.getUserInfo = function () {
        b.get("/User/info", {}).success(function (b) {
            true == b.success && b.data.username && (a.is_login = !0, a.user_info = b.data)
        })
    }, a.TrustHTML = function (a) {
        return c.trustAsHtml(a)
    }, a.getUserInfo()
}]), apiview.controller("UserController", ["$scope", "$http", "$sce", function (a, b, c) {
    a.user_data = {}, a.project_list = [], a.project_count = [], a.getProfile = function () {
        b.get("/User/profile", {}).success(function (b) {
            true == b.success && (a.user_data = b.data, a.user_info.gravater = b.data.gravater, $("form[name='profile_form']").validator({}))
        })
    }, a.updateProfile = function () {
        return $("#profile_form").data("bs.validator").hasErrors() ? !1 : (btn = $("button[type=submit]"), btn.button("loading"), b.post("/User/profile", $.param(a.user_data)).success(function (b) {
            a.dealResponse(b)
        }), btn.button("reset"), !1)
    }, a.createProject = function () {
        a.commonAjax("post", "/project/create.html", function (a) {
            window.location.href = "/p/" + a.pid + "#/project/dashbord"
        })
    }, a.projectCount = function () {
        b.get("/project/count").success(function (b) {
            true == b.success && (a.project_count = b.data)
        })
    }, a.getProjectList = function (c) {
        b.get("/project/getList?type=" + c).success(function (b) {
            true == b.success && (a.project_list = b.data)
        })
    }
}]), apiview.controller("ProjectController", ["$scope", "$http", "md5", function (a, b, c) {
    a.getProjectInfo = function () {
        b.get("/project/getProject?pid=" + pid).success(function (b) {
            a.project_info = b.data
        })
    }, a.getActivity = function () {
        b.get("/activity/getList?pid=" + pid).success(function (b) {
            a.activity = b.data
        })
    }, a.getStatistic = function () {
        b.get("/project/statistic?pid=" + pid).success(function (b) {
            a.statistic_data = b.data
        })
    }, a.editProject = function () {
        a.project_info.pid = pid, b.post("/project/edit", $.param(a.project_info)).success(function (b) {
            a.dealResponse(b)
        })
    }, a.deleteProject = function () {
        setTimeout(function () {
            $(".ui-pnotify input").attr("type", "password")
        }, 200), av.prompt("删除项目属高危操作，需要输入您的登录密码：", function (d, e, f) {
            if (!f)return void av.alert("error", "错误", "密码不能为空！");
            var g = {pid: pid, password: c.createHash(f)};
            b.post("/project/delete", $.param(g)).success(function (b) {
                a.dealResponse(b, function () {
                    setTimeout(function () {
                        window.location.href = "/user#/project/all"
                    }, 1e3)
                })
            })
        })
    }
}]), apiview.controller("GroupController", ["$scope", "$http", "$routeParams", "$location", function (a, b, c, d) {
    a.group_data = {}, a.group_list = [], a.getGroupList = function () {
        b.get("/group/getList?pid=" + pid).success(function (b) {
            a.group_list = b.data, $(".mng-cloak").removeClass("mng-cloak")
        })
    }, a.groupCreate = function () {
        var url = "";
        if (a.group_data.id == null)
            url = "/group/create?pid=" + pid;
        else {
            url = "/group/edit";
            a.group_data.apis = null;
        }
        b.post(url, $.param(a.group_data)).success(function (b) {
            a.dealResponse(b, function (b) {
                location.hash = "/group/list", a.group_data = {}
            })
        })
    }, a.groupEdit = function () {
        b.get("/group/getGroup?pid=" + pid + "&id=" + c.id).success(function (b) {
            a.group_data = b.data
        })
    }, a.groupDelete = function (c) {
        av.confirm("确定删除" + a.group_list[c].name + "分组？", function () {
            b.post("/group/delete", $.param({pid: pid, id: a.group_list[c].id})).success(function (b) {
                a.dealResponse(b, function (b) {
                    a.group_list.splice(c, 1)
                })
            })
        })
    }
}]), apiview.controller("ApiController", ["$scope", "$http", "$routeParams", "$timeout", "$location", "md5", function (a, b, c, d, e, f) {
    a.api_list = [], a.api_list_origin = [], a.api_data = {
        name: "",
        brief: "",
        groupId: "",
        url: "",
        method: "GET",
        params: [],
        parameter: "",
        output: ""
    }, a.show_all = 1, a.search_keyword = "", a.getApiList = function () {
         b.get("/api/getList?" + $.param({pid: pid})).success(function (b) {
             true == b.success ? a.api_list = b.data:av.alert("error", "错误！", b.message);
        })
    }, a.getApiInfo = function () {
        b.get("/api/getApi?" + $.param({pid: pid, id: c.id})).success(function (b) {
            true == b.success ? (a.api_info = b.data, a.apiParseOutput(b.data.output)) : av.alert("error", "错误！", "接口ID错误")
        })
    }, a.$watch("search_keyword", function (key) {
        b.get("/api/getList?" + $.param({pid: pid,key:key})).success(function (b) {
            true == b.success ? a.api_list = b.data : av.alert("error", "错误！", b.message);
        })
    }), a.apiEdit = function () {
        /create/.test(e.$$path) || (/copy/.test(e.$$path) ? copy = 1 : copy = 0, b.get("/api/getApi?" + $.param({
                pid: pid,
                id: c.id
            })).success(function (b) {
            copy && delete b.data.id, a.api_data = b.data, d(function () {
                $("#group_id").val(a.api_data.groupId)
            }, 300), a.apiParseOutput(b.data.output)
        }))
    }, a.apiDelete = function (c, d) {
        av.confirm("确定删除接口：" + c + "？", function () {
            b.post("/api/delete", $.param({id: d, pid: pid})).success(function (b) {
                a.dealResponse(b, function (b) {
                    /view/.test(location.hash) ? location.hash = "/api/list" : a.getApiList()
                })
            })
        })
    }, a.apiAddParam = function () {
        var b = {para_name: "", para_type: "", para_must: "是", para_intro: ""};
        //a.api_data.params=[{para_name: "", para_type: "", para_must: "", para_intro: ""}]
        a.api_data.params.push(b)
    }, a.apiCreate = function () {
        a.api_data.parameter = JSON.stringify(a.api_data.params);
        return $("form").validator("validate"), $("form").data("bs.validator") && $("form").data("bs.validator").hasErrors() ? !1 : /格式错误/.test($("#jsonoutput").html()) ? !1 :
            (a.api_data.pid = pid, void b.post(a.api_data.id==null?"/api/create":"/api/edit", $.param(a.api_data)).success(function (b) {
                a.dealResponse(b, function (a) {
                    location.hash = "/api/list"
                })
            }))
    }, a.apiParseOutput = function (a) {
        if (!a)return !1;
        try {
            $.JSONView(a, $("#jsonoutput"))
        } catch (b) {
            $("#jsonoutput").html('<div class="alert alert-warning json-parse-error"><span class="close rotate-hover"></span><strong></strong>Json格式错误！</div>')
        }
    }
}]), apiview.controller("MemberController", ["$scope", "$http", function (a, b) {
    a.member_list = [], a.member_data = {email: "", edit: !1}, a.getMemberList = function () {
        b.get("/member/getList?pid=" + pid).success(function (b) {
            a.member_list = b.data
        })
    }, a.memberAdd = function () {
        b.post("/member/add?pid=" + pid, $.param(a.member_data)).success(function (b) {
            a.dealResponse(b, function (b) {
                a.member_list.push(b.data), a.member_data = {email: "", edit: !1}
            })
        })
    }, a.memberDelete = function (c) {
        av.confirm("确定删除成员：" + a.member_list[c].username + "？", function () {
            b.post("/member/delete", $.param({pid: pid, user_id: a.member_list[c].user_id})).success(function (b) {
                a.dealResponse(b, function (b) {
                    a.member_list.splice(c, 1)
                })
            })
        })
    }
}]), apiview.controller("MessageController", ["$scope", "$http", function (a, b) {
    a.message_list = [], a.getMessageList = function () {
        b.get("/Message/getList?pid=" + pid).success(function (b) {
            a.group_list = b.data, $(".mng-cloak").removeClass("mng-cloak")
        })
    }, a.messageRead = function () {
        b.post("/Message/create.html?pid=" + pid, $.param(a.group_data)).success(function (b) {
            a.dealResponse(b, function (b) {
                location.hash = "/group/list", a.group_data = {}
            })
        })
    }, a.messageDelete = function (c) {
        av.confirm("确定删除选择的消息？", function () {
            b.post("/Message/delete", $.param({message_id: message_id})).success(function (b) {
                a.dealResponse(b, function (b) {
                    a.group_list.splice(c, 1)
                })
            })
        })
    }
}]);